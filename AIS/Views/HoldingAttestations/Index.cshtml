@using AIS.Models
@using AIS.Entities
@model AttestationStudentViewModel


@{
    ViewBag.Title = "HoldingAttestations";
}

<hr />
<div class="row">
    <p class="text-center">
        <h class="fw-bold">Дисциплина:</h>
        @Model.Attestations.Discipline.Title
    </p>
</div>

<div class="row">
    <p class="text-center">
        <h class="fw-bold">Группа:</h>
        @Model.Attestations.Group.Title
    </p>
</div>

<div class="row">
    <div class="col-md-4">
        <div style="display: inline-block;">
            <table class="table">
                <thead>
                    <tr>
                        <th>Студенты группы:</th>
                    </tr>
                </thead>

                @foreach (Student std in Model.Students)
                {
                    <tr>
                        <td>
                            @using (@Ajax.BeginForm("GetStudent", new AjaxOptions { UpdateTargetId = "results" }))
                            {
                                @Html.AntiForgeryToken()
                                <input name="idStudent" value="@std.IdStudent" readonly hidden />
                                <input id="dis_@std.IdStudent" style="background: none; border: none; margin:0; padding:0;" type="submit" value="@std.FirstName @std.LastName @std.Patronymic" />
                            }
                        </td>
                    </tr>
                }
            </table>
        </div>
    </div>
    <div class="col-md-8" id="criteriaArea">
        <div id="results"></div>
        @using (@Ajax.BeginForm("SaveResult", new AjaxOptions { OnSuccess = "OnSuccess" }))
        {
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <table class="table">
                <thead>
                    <tr>
                        <th class="text-center">Наименование</th>
                        <th class="text-center">Описание</th>
                        <th class="text-center">Процент снятия</th>
                        <th class="text-center">Балл снятия</th>
                        <th class="text-center">Максимальный балл</th>
                        <th class="text-center">Принят?</th>
                        <th class="text-center">Количество ошибок</th>
                    </tr>
                </thead>
                <tbody id="criteriaList">
                    @Html.AntiForgeryToken()
                    @{ int i = 0;}
                    @foreach (Criteria crt in Model.Criterias)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(model => crt.Title, new { htmlAttributes = new { @class = "form-control" } })
                            </td>
                            <td>
                                @Html.DisplayFor(model => crt.Description, new { htmlAttributes = new { @class = "form-control" } })
                            </td>
                            <td class="text-center align-middle">
                                @{
                                    if (decimal.Parse(@crt.WithdrawPercent) == 0)
                                    {
                                        <h>-</h>
                                    }
                                    else
                                    {
                                        <h>@Html.DisplayFor(model => crt.WithdrawPercent, new { htmlAttributes = new { @class = "form-control" } }) %</h>
                                    }



                                }
                            </td>
                            <td class="text-center align-middle">
                                @{
                                    if (decimal.Parse(@crt.RemoveAPoint) == 0)
                                    {
                                        <h>-</h>
                                    }
                                    else
                                    {
                                        <h>@Html.DisplayFor(model => crt.RemoveAPoint, new { htmlAttributes = new { @class = "form-control" } })</h>
                                    }

                                }
                            </td>
                            <td class="text-center align-middle">
                                @Html.DisplayFor(model => crt.NumberOfPionts, new { htmlAttributes = new { @class = "form-control" } })
                            </td>
                            <td class="text-center align-middle">
                                <input id="chekBox" class="form-check-input" type="checkbox" value="true" name="dataGets[@i].Accepted" />
                            </td>
                            <td class="text-center align-middle">
                                @{ if (decimal.Parse(@crt.RemoveAPoint) == 0 && decimal.Parse(@crt.WithdrawPercent) == 0)
                                    {
                                        <input id="numberBox" min="0" readonly class="form-control" name="dataGets[@i].Point" type="number" />
                                    }

                                    else
                                    {
                                        <input id="numberBox" min="0" class="form-control" name="dataGets[@i].Point" type="number" />
                                    }
                                }
                            </td>

                        </tr>
                        i++;
                    }
                    @{
                        i = 0;


                    }

                </tbody>
            </table>
            if (Model.Students.Count() != 0 && Model.Criterias.Count() != 0)
            {
                <input id="saveResult" class="btn btn-outline-secondary" type="submit" value="Внести результаты студента" />
            }

        }
        @Html.ActionLink("Завершить аттестацию", "BlockAttestations", "Attestations", new { idAttestations = Model.Attestations.IdAttestation }, new { @class = "btn btn-outline-secondary btn-sm", @hidden = "true", @id = "AttestationComplited" })

        @if (Model.Students.Count() == 0)
        {
            @Html.ActionLink("Завершить аттестацию", "BlockAttestations", "Attestations", new { idAttestations = Model.Attestations.IdAttestation }, new { @class = "btn btn-outline-secondary btn-sm", @id = "AttestationComplited" })
        }

    </div>
</div>
