@using AIS.Models
@model AttestationListViewModel


@{
    ViewBag.Title = "Index";
}
<!-- Модальное окно -->
<div class="modal fade " id="staticBackdrop"  tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Импорт новой аттестации</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
            </div>
            <div class="modal-body">
                <h3>Выберите файл для импорта</h3>
                @using (Ajax.BeginForm("ImportAttestation", "Attestations", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "result"}, new { enctype = "multipart/form-data" }))
                {
                    <div class="row">
                        <label for="formFileLg" class="form-label">Скачать шаблон можно по ссылке: @Html.ActionLink("Шаблон файла импорта", "Index", "Home")</label>
                        <input class="form-control form-control-lg" id="formFileLg" name="upload" type="file" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" required />
                    </div>
                    <br><br>
                    <input type="submit" class="btn btn-primary" value="Импортировать" />
                }
                <div class="row border" id="result" style="margin: 10px;">

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Закрыть</button>
            </div>
        </div>
    </div>
</div>
<hr />
<p>
    @Html.ActionLink("Добавить новую аттестацию", "Create", new { }, new { @class = "btn btn-secondary" })

    <!-- Кнопка-триггер модального окна -->
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
        Импорт аттестации
    </button>

</p>
<form method="get">
    <div class="form-inline">
        <label class="control-label">Тип аттестации: </label>
        @Html.DropDownList("idTypeAttestation", Model.TypeAttestations as SelectList, //Выпадающий список для фильтрации по типам аттестаций
                    htmlAttributes: new { @class = "form-select" })
        <label class="control-label">Группа студентов: </label>
        @Html.DropDownList("IdGroup", Model.Groups as SelectList, //Выпадающий список для фильтрации по группам студентов
                    htmlAttributes: new { @class = "form-select" })
        <label class="control-label">Дисциплина: </label>
        @Html.DropDownList("IdDiscipline", Model.Disciplines as SelectList, //Выпадающий список для фильтрации по дисциплинам
                    htmlAttributes: new { @class = "form-select" })
        <input type="submit" value="Поиск" class="btn btn-outline-secondary btn-sm" />
    </div>
</form>
<hr />
<table class="table">
    <tr>
        <th class="text-center">
            Дата начала
        </th>
        <th class="text-center">
            Дата конца
        </th>
        <th class="text-center">
            Группа
        </th>
        <th class="text-center">
            Дисциплина
        </th>
        <th class="text-center">
            Вид аттестации
        </th>
        <th class="text-center">
            Завершен
        </th>
        <th class="text-center">
        </th>
        <th class="text-center">
            Управление
        </th>
        <th class="text-center">
        </th>
    </tr>

    @foreach (var item in Model.Attestations)
    {
        <tr class="text-center">
            <td>
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Group.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Discipline.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TypeAttestation.Title)
            </td>
            <td>
                @{
                    if (item.Сompleted.HasValue)
                    {
                        if (item.Сompleted.Value)
                        {
                            <h>Да</h>
                        }
                        else
                        {
                            <h>Нет</h>
                        }
                    }
                    else
                    {
                        <h>Нет</h>
                    }
                }
            </td>
            @{
                if (item.Сompleted != null && item.Сompleted == true) //Если аттестация завершена, то выводится кнопка на формирование ведомости
                {
                    <td />
                    <td>
                        @Html.ActionLink("Сформировать ведомость по группе", "GetAttestationVedomost", new { idAttestations = item.IdAttestation }, new { @class = "btn btn-outline-secondary btn-sm" })
                    </td>
                    <td>
                        @Html.ActionLink("Сформировать ведомость по каждому студенту", "GetAttestationVedomostStudent", new { idAttestations = item.IdAttestation }, new { @class = "btn btn-outline-secondary btn-sm" })
                    </td>
                    
                }
                else
                {
                    if (User.IsInRole("Преподаватель") && item.IdTeachers == Model.IdCurentUser) // Проверка на то, что начать аттестацию может только преподаватель, который закреплен за данной аттестацией
                    {
                        <td>
                            @Html.ActionLink("Начать", "Index", "HoldingAttestations", new { id = item.IdAttestation }, new { @class = "btn btn-outline-secondary btn-sm" })
                        </td>
                    }
                    else
                    {
                        <td></td>
                    }
                    <td>
                        @Html.ActionLink("Редактировать", "Edit", new { id = item.IdAttestation }, new { @class = "btn btn-outline-secondary btn-sm" })
                    </td>
                    <td>
                        @Html.ActionLink("Удалить", "Delete", new { id = item.IdAttestation }, new { @class = "btn btn-outline-secondary btn-sm" })
                    </td>
                }
            }

        </tr>
    }

</table>
